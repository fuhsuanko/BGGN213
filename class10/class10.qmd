---
title: "class 10: Halloween Candy Mini Project"
author: "Fu-Hsuan Ko"
format: pdf
toc: True
---

# Background

In this mini-project we will examine 538 Halloween Candy data.
What is your favourite candy? What is nougat anyway? And how do you say it in America?

```{r}
candy <- read.csv("candy-data.csv", row.names = 1)
head(candy)

```

# Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

# Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

# Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Twix", ]$winpercent
```

# Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

# Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

```{r}
skimr::skim(candy)
```

# Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

winepercent

# Q7. What do you think a zero and one represent for the candy$chocolate column?

```{r}
candy$chocolate
```

Zero means this candy is not in the type of chocolate, while one represnents the candy is in the chocolate type

# Q8. Plot a histogram of winpercent values

```{r}
library(ggplot2)
ggplot(candy, aes(winpercent))+
  geom_histogram(bins=10, col="red", fill="yellow")
```

# Q9. Is the distribution of winpercent values symmetrical?

Yes

# Q10. Is the center of the distribution above or below 50%?

```{r}
median(candy$winpercent) 
```

# Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
chocolate.inds <- as.logical(candy$chocolate)
chocolate.win <- candy[chocolate.inds, ]$winpercent
mean(chocolate.win) 

```

And for fruit candy...

```{r}
fruity.inds <- as.logical(candy$fruity)
fruity.win <- candy[fruity.inds,]$winpercent
mean(fruity.win)
```

# Q12. Is this difference statistically significant?

Yes

```{r}
t.test(chocolate.win, fruity.win)
```

# 3. Overall Candy Rankings

The base R "sort()" and "order()" functions are very useful!

```{r}
x <- c(5,1,2,6)
sort(x, decreasing = T)
```
```{r}
x[order(x)]
```

```{r}
y <- c("berry", "alice", "chandra")
y
sort(y)
order(y)
```

# Q13. What are the five least liked candy types in this set?

First I want to order/arrange the whole dataset by winpercent values

```{r}
inds <- order(candy$winpercent)
head(candy[inds, ], n=5)
```



# Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
library(dplyr)
head(arrange(candy,desc(winpercent )), n=5)
```

# Q15. Make a first barplot of candy ranking based on winpercent values.

# Barplot

The default barplot, made with "geom_col" has the bars in the order they are in the dataset...

```{r fig.height=10}
ggplot(candy)+
     aes(winpercent, row.names(candy))+
     geom_col()
```

# Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r }
p <- ggplot(candy)+
  aes(winpercent, reorder(row.names(candy), winpercent))+
  geom_col()
```

```{r}
ggsave("mybarplot.png", p)
```

```{r fig.height=10}
p
```

Let's setup a color vector (that signifies candy type) that we can then use for some future  black balues (one for each candy). Then we overwrite chocolate (for chocolate candy), brown(for candy bars) and red (for fruity candy)

```{r}
my_cols <- rep("black", nrow(candy))
#my_cols
my_cols[as.logical(candy$chocolate)] <- "chocolate"
my_cols[as.logical(candy$bar)] <- "brown"
my_cols[as.logical(candy$fruity)] <- "red"
my_cols
```

Now I can use this vector th color up my barplot

```{r fig.height=10}
ggplot(candy)+
  aes(winpercent, reorder(row.names(candy), winpercent))+
  geom_col(fill=my_cols)

```

Now, for the first time, using this plot we can answer questions like:

#  Q17. What is the worst ranked chocolate candy?

```{r}
library(dplyr)
candy%>%
  filter(chocolate==TRUE)%>%
  arrange(winpercent)%>%
  .[1,]
```


#  Q18. What is the best ranked fruity candy?

```{r}
candy%>%
  filter(fruity==TRUE)%>%
  arrange(desc(winpercent))%>%
  .[1,]
```

# 4. Taking a look at pricepercnet

What about value for money?
What is the best candy for the least money?

One way to get at this would be to make a plot of "winpercent" as the "pricepercent" balues

```{r}
ggplot(candy)+
  aes(winpercent, pricepercent, label=rownames(candy))+
  geom_point(col=my_cols)+
  geom_text(col=my_cols)
```

This plot sucks! I can not read the labels...
We can use ggrepl package to help with this

```{r}
library(ggrepel)

ggplot(candy)+
  aes(winpercent, pricepercent, label=rownames(candy))+
  geom_point(col=my_cols)+
  geom_text_repel(col=my_cols, max.overlaps = 7)
```

# Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

ReeseÕs Miniatures

# Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

Nik L Nip

# Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r,fig.height=10}
ggplot(candy)+
  aes(pricepercent, reorder(row.names(candy), pricepercent))+
  geom_point()+
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), xend = 0))
```

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```
# Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity

# Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent

# PCA: Principal Component Analysis

The main funciton that always there for us is "prcomp()" It has an important argument that is set to "scale=False"

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

My PCA plot (a.k.a.) PC1 vs PC2 score plot.

```{r}
plot(pca$x[, 1], pca$x[,2], col=my_cols, pch=16)
```

I will make a "nicer" plot with ggplot.
ggplot only works with data.frames as imput so I need to make one for it first...

```{r}
#Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
ggplot(my_data)+
  aes(PC1, PC2, label=row.names(my_data))+
  geom_point(col=my_cols)+
  geom_text_repel(col=my_cols, max.overlaps = 7)
```

```{r}
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

# Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity. Yes